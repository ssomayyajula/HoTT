{-# OPTIONS --without-K --rewriting #-}

module Pi.Topology.KS21 where

open import lib.Basics using (Type; Type‚ÇÄ; Type‚ÇÅ; cst; _==_; idp; Œ£; _,_; pair=; _‚âÉ_; equiv; has-level)
open import lib.types.Truncation using (Trunc; [_]; Trunc-level; Trunc-rec)
open import lib.PathOver using (from-transp)
open import lib.types.Bool using (Bool; Bool-level)
open import lib.groups.Homomorphism using (group-hom)
open import lib.types.EilenbergMacLane1

open import Pi.Topology.SymmetricGroup

-- NOT propositional truncation, need to fix
U : Type‚ÇÅ
U = Œ£ Type‚ÇÄ (Œª X ‚Üí Trunc 1 (X == Bool)) 

`ùüö : U
`ùüö = Bool , [ idp ]

K : Type‚ÇÄ
K = EM‚ÇÅ (S Bool-level)

-- TODO: Show that 3-paths are trivial, TwoUniverse style
U-level : has-level 1 U
U-level x y x‚ÇÅ y‚ÇÅ x‚ÇÇ y‚ÇÇ = {!!}

model-is-em : U ‚âÉ K
model-is-em = equiv f g {!!} {!!} where
  f : U ‚Üí K
  f (_ , p) = Trunc-rec EM‚ÇÅ-level (cst embase) p
  
  g : K ‚Üí U
  g = EM‚ÇÅ-rec U-level `ùüö (group-hom {!!} {!!})
